name: Tag and Release on manifest.json version change

on:
  push:
    paths:
      - 'custom_components/v2c_cloud/manifest.json'

jobs:
  tag-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract version from manifest.json
        id: get_version
        run: |
          VERSION=$(jq -r '.version' custom_components/v2c_cloud/manifest.json)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Check if tag exists
        id: check_tag
        run: |
          if git rev-parse "v${VERSION}" >/dev/null 2>&1; then
            echo "Tag exists"
            echo "EXISTS=true" >> $GITHUB_ENV
          else
            echo "Tag does not exist"
            echo "EXISTS=false" >> $GITHUB_ENV
          fi

      - name: Create tag and push
        if: env.EXISTS == 'false'
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag "v${VERSION}"
          git push origin "v${VERSION}"

      - name: Prepare release notes from changelog
        if: env.EXISTS == 'false'
        run: |
          python <<'PY'
          import os
          import pathlib
          import re
          import sys

          version = os.environ["VERSION"]
          changelog_path = pathlib.Path("CHANGELOG.md")
          if not changelog_path.exists():
              sys.exit("CHANGELOG.md not found")

          text = changelog_path.read_text(encoding="utf-8")
          pattern = rf"^## \[{re.escape(version)}\].*?(?=^## \[|\Z)"
          match = re.search(pattern, text, flags=re.MULTILINE | re.DOTALL)
          if not match:
              sys.exit(f"Release notes for version {version} not found in CHANGELOG.md")

          section = match.group(0).strip()
          pathlib.Path("release_body.md").write_text(section, encoding="utf-8")
          PY

      - name: Create GitHub Release
        if: env.EXISTS == 'false'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.VERSION }}
          name: v${{ env.VERSION }}
          body_path: release_body.md
