{
  "openapi": "3.1.0",
  "info": {
    "title": "V2C Thirdparty API",
    "description": "# Introduction\nThis is the V2C RESTful API (Application Programming Interface), which facilitates interaction with V2C's web services. It enables **remote control of charging devices**, **management of RFID credentials**, **retrieval of charging statistics**, and **configuration of specific device parameters**.\n\nThis API allows you to integrate your e-Charger with self-developed applications or services, enabling the creation of custom automations and advanced functionalities for your charging points.\n\n# Authentication\nThe API uses a Bearer Token (API Key) for authentication. You must provide your personal token in the custom header **`apikey`** with every request. If the `apikey` is invalid or missing, the API will return a **`401 Unauthorized`** error.\n\n## How to obtain your API Key\nTo obtain your authentication token, log in to **v2c.cloud**, navigate to the **API** section in the left-hand menu, and generate your key.\n\nFor more information, visit: https://v2charge.com/support/v2c-cloud/get-token-id-api-rest-cloud/\n\n# Rate Limiting\nEach user is subject to a rate limit of **1000 daily calls** (requests). Should you require a higher volume of calls, please contact V2C technical support.\n\nAll successful responses will include the following headers for usage monitoring:\n\n* **`RateLimit-Limit`**: The maximum number of requests allowed in the daily period (e.g., 1000).\n* **`RateLimit-Remaining`**: The number of requests remaining in the current daily period.\n",
    "version": "1.0.0",
    "contact": {
      "name": "V2C Support",
      "email": "info@v2charge.com"
    },
    "x-logo": {
      "url": "https://v2charge.com/wp-content/uploads/2024/11/cropped-v2c-charge-logo-menu.png",
      "altText": "V2C Logo",
      "backgroundColor": "#FFFFFF",
      "href": "https://v2charge.com"
    }
  },
  "servers": [
    {
      "url": "https://v2c.cloud/kong/v2c_service/",
      "description": "V2C Production Server"
    }
  ],
  "tags": [
    {
      "name": "Device Control & Configuration",
      "description": "Commands to remotely control and configure the core charging behavior and settings of devices (POST Actions)."
    },
    {
      "name": "Device Status & Data Retrieval",
      "description": "Queries to obtain the current operational state and diagnostic data from the device (GET Queries)."
    },
    {
      "name": "RFID Management",
      "description": "Administration of RFID cards, including registration, removal, and reader control."
    },
    {
      "name": "Charging Statistics",
      "description": "Retrieval of aggregated and session-specific data for charging history."
    },
    {
      "name": "Advanced Power Profiles",
      "description": "Management of personalized power configurations (e.g., Solar Mode profiles)."
    },
    {
      "name": "Firmware Management",
      "description": "Management and query of the device's firmware version."
    },
    {
      "name": "Pairing Management",
      "description": "Management of device pairings associated with the user account."
    }
  ],
  "security": [
    {
      "apiKeyAuth": []
    }
  ],
  "paths": {
    "/device/startcharge": {
      "post": {
        "tags": [
          "Device Control & Configuration"
        ],
        "summary": "Start or Resume Charging Session",
        "description": "Initiates or resumes the charging session on the specified device.",
        "operationId": "executeStartChargeCommand",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_DEVICE_ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Command executed successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Exception"
          }
        },
        "x-codeSamples": [
          {
            "lang": "curl",
            "label": "cURL",
            "source": "curl -X 'POST' \\\n  'https://v2c.cloud/kong/v2c_service/device/startcharge?deviceId=YOUR_DEVICE_ID' \\\n  -H 'apikey: {APIKEY}'\n"
          }
        ]
      }
    },
    "/device/pausecharge": {
      "post": {
        "tags": [
          "Device Control & Configuration"
        ],
        "summary": "Pause Charging Session",
        "description": "Pauses the current charging session on the specified device.",
        "operationId": "executePauseChargeCommand",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_DEVICE_ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Command executed successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Exception"
          }
        },
        "x-codeSamples": [
          {
            "lang": "curl",
            "label": "cURL",
            "source": "curl -X 'POST' \\\n  'https://v2c.cloud/kong/v2c_service/device/pausecharge?deviceId=YOUR_DEVICE_ID' \\\n  -H 'apikey: {APIKEY}'\n"
          }
        ]
      }
    },
    "/device/intensity": {
      "post": {
        "tags": [
          "Device Control & Configuration"
        ],
        "summary": "Set Maximum Charging Current",
        "description": "Updates the maximum charging current (in Amperes) allowed for the session.",
        "operationId": "executeChangeIntesityThirdpartyCommand",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_DEVICE_ID"
          },
          {
            "name": "value",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "16"
          }
        ],
        "responses": {
          "200": {
            "description": "Command executed successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Exception"
          }
        },
        "x-codeSamples": [
          {
            "lang": "curl",
            "label": "cURL",
            "source": "curl -X 'POST' \\\n  'https://v2c.cloud/kong/v2c_service/device/intensity?deviceId=YOUR_DEVICE_ID&value=16' \\\n  -H 'apikey: {APIKEY}'\n"
          }
        ]
      }
    },
    "/device/locked": {
      "post": {
        "tags": [
          "Device Control & Configuration"
        ],
        "summary": "Lock/Unlock Charging Point",
        "description": "Locks or unlocks the charging point access. 0: Unlock, 1: Lock.",
        "operationId": "executeLockChargeCommand",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "DFL2JPV"
          },
          {
            "name": "value",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "0",
                "1"
              ]
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Command executed successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Exception"
          }
        },
        "x-codeSamples": [
          {
            "lang": "curl",
            "label": "cURL (Lock)",
            "source": "curl -X 'POST' \\\n  'https://v2c.cloud/kong/v2c_service/device/locked?deviceId=DFL2JPV&value=1' \\\n  -H 'apikey: {APIKEY}'\n"
          },
          {
            "lang": "curl",
            "label": "cURL (Unlock)",
            "source": "curl -X 'POST' \\\n  'https://v2c.cloud/kong/v2c_service/device/locked?deviceId=DFL2JPV&value=0' \\\n  -H 'apikey: {APIKEY}'\n"
          }
        ]
      }
    },
    "/device/dynamic": {
      "post": {
        "tags": [
          "Device Control & Configuration"
        ],
        "summary": "Activate/Deactivate Dynamic Power Control",
        "description": "Enables or disables dynamic power control (load balancing). 0: Dynamic Off, 1: Dynamic On.",
        "operationId": "executeChangeDynamicCommand",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_DEVICE_ID"
          },
          {
            "name": "value",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "0",
                "1"
              ]
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Command executed successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Exception"
          }
        },
        "x-codeSamples": [
          {
            "lang": "curl",
            "label": "cURL",
            "source": "curl -X 'POST' \\\n  'https://v2c.cloud/kong/v2c_service/device/dynamic?deviceId=YOUR_DEVICE_ID&value=1' \\\n  -H 'apikey: {APIKEY}'\n"
          }
        ]
      }
    },
    "/device/chargefvmode": {
      "post": {
        "tags": [
          "Device Control & Configuration"
        ],
        "summary": "Configure Photovoltaic (PV) Charging Mode",
        "description": "Updates the photovoltaic charging mode. 0: PV + Minimum Power, 1: Exclusive PV, 2: Maximum Power.",
        "operationId": "executeChargeFVModeThirdpartyCommand",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_DEVICE_ID"
          },
          {
            "name": "value",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "0",
                "1",
                "2"
              ]
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Command executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseSuccess"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Exception"
          }
        },
        "x-codeSamples": [
          {
            "lang": "curl",
            "label": "cURL",
            "source": "curl -X 'POST' \\\n  'https://v2c.cloud/kong/v2c_service/device/chargefvmode?deviceId=YOUR_DEVICE_ID&value=1' \\\n  -H 'apikey: {APIKEY}'\n"
          }
        ]
      }
    },
    "/device/maxpower": {
      "post": {
        "tags": [
          "Device Control & Configuration"
        ],
        "summary": "Set Maximum Installation Power (Watts)",
        "description": "Updates the maximum power (in Watts) allowed for the entire electrical installation.",
        "operationId": "executeChangeMaxPowerInstallationCommand",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_DEVICE_ID"
          },
          {
            "name": "value",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "5750"
          }
        ],
        "responses": {
          "200": {
            "description": "Command executed successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Exception"
          }
        },
        "x-codeSamples": [
          {
            "lang": "curl",
            "label": "cURL",
            "source": "curl -X 'POST' \\\n  'https://v2c.cloud/kong/v2c_service/device/maxpower?deviceId=YOUR_DEVICE_ID&value=5750' \\\n  -H 'apikey: {APIKEY}'\n"
          }
        ]
      }
    },
    "/device/max_car_int": {
      "post": {
        "tags": [
          "Device Control & Configuration"
        ],
        "summary": "Set Vehicle Maximum Accepted Current",
        "description": "Updates the maximum charging current (in Amperes) that the connected electric vehicle (EV) can accept.",
        "operationId": "executeChangeMaxCarIntesityCommand",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_DEVICE_ID"
          },
          {
            "name": "value",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "32"
          }
        ],
        "responses": {
          "200": {
            "description": "Command executed successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Exception"
          }
        },
        "x-codeSamples": [
          {
            "lang": "curl",
            "label": "cURL",
            "source": "curl -X 'POST' \\\n  'https://v2c.cloud/kong/v2c_service/device/max_car_int?deviceId=YOUR_DEVICE_ID&value=32' \\\n  -H 'apikey: {APIKEY}'\n"
          }
        ]
      }
    },
    "/device/min_car_int": {
      "post": {
        "tags": [
          "Device Control & Configuration"
        ],
        "summary": "Set Vehicle Minimum Accepted Current",
        "description": "Updates the minimum charging current (in Amperes) that the connected electric vehicle (EV) requires to charge.",
        "operationId": "executeChangeMinCarIntesityCommand",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_DEVICE_ID"
          },
          {
            "name": "value",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "6"
          }
        ],
        "responses": {
          "200": {
            "description": "Command executed successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Exception"
          }
        },
        "x-codeSamples": [
          {
            "lang": "curl",
            "label": "cURL",
            "source": "curl -X 'POST' \\\n  'https://v2c.cloud/kong/v2c_service/device/min_car_int?deviceId=YOUR_DEVICE_ID&value=6' \\\n  -H 'apikey: {APIKEY}'\n"
          }
        ]
      }
    },
    "/device/charger_until_energy": {
      "post": {
        "tags": [
          "Device Control & Configuration"
        ],
        "summary": "Program Charge by Energy (kWh)",
        "description": "Configures the device to automatically stop charging after a specific amount of energy (in kWh) has been delivered.",
        "operationId": "executeChargerUntilEnergyCommand",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_DEVICE_ID"
          },
          {
            "name": "value",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "10"
          }
        ],
        "responses": {
          "200": {
            "description": "Command executed successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Exception"
          }
        },
        "x-codeSamples": [
          {
            "lang": "curl",
            "label": "cURL",
            "source": "curl -X 'POST' \\\n  'https://v2c.cloud/kong/v2c_service/device/charger_until_energy?deviceId=YOUR_DEVICE_ID&value=10' \\\n  -H 'apikey: {APIKEY}'\n"
          }
        ]
      }
    },
    "/device/charger_until_minutes": {
      "post": {
        "tags": [
          "Device Control & Configuration"
        ],
        "summary": "Program Charge by Time (Minutes)",
        "description": "Configures the device to automatically stop charging after a specific duration (in minutes).",
        "operationId": "executeChargerUntilMinutesCommand",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_DEVICE_ID"
          },
          {
            "name": "value",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "60"
          }
        ],
        "responses": {
          "200": {
            "description": "Command executed successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Exception"
          }
        },
        "x-codeSamples": [
          {
            "lang": "curl",
            "label": "cURL",
            "source": "curl -X 'POST' \\\n  'https://v2c.cloud/kong/v2c_service/device/charger_until_minutes?deviceId=YOUR_DEVICE_ID&value=60' \\\n  -H 'apikey: {APIKEY}'\n"
          }
        ]
      }
    },
    "/device/startchargekw": {
      "post": {
        "tags": [
          "Device Control & Configuration"
        ],
        "summary": "Start Scheduled Charge by Energy (kWh)",
        "description": "Starts a charging session that is scheduled to stop after delivering a specified amount of energy (in kWh).",
        "operationId": "executeStartChargeKWCommand",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_DEVICE_ID"
          },
          {
            "name": "kw",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "15"
          }
        ],
        "responses": {
          "200": {
            "description": "Command executed successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Exception"
          }
        },
        "x-codeSamples": [
          {
            "lang": "curl",
            "label": "cURL",
            "source": "curl -X 'POST' \\\n  'https://v2c.cloud/kong/v2c_service/device/startchargekw?deviceId=YOUR_DEVICE_ID&kw=15' \\\n  -H 'apikey: {APIKEY}'\n"
          }
        ]
      }
    },
    "/device/startchargeminutes": {
      "post": {
        "tags": [
          "Device Control & Configuration"
        ],
        "summary": "Start Scheduled Charge by Time",
        "description": "Starts a charging session that is scheduled to stop after a specified number of minutes.",
        "operationId": "executeStartChargeMinutesCommand",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_DEVICE_ID"
          },
          {
            "name": "minutes",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "120"
          }
        ],
        "responses": {
          "200": {
            "description": "Command executed successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Exception"
          }
        },
        "x-codeSamples": [
          {
            "lang": "curl",
            "label": "cURL",
            "source": "curl -X 'POST' \\\n  'https://v2c.cloud/kong/v2c_service/device/startchargeminutes?deviceId=YOUR_DEVICE_ID&minutes=120' \\\n  -H 'apikey: {APIKEY}'\n"
          }
        ]
      }
    },
    "/device/timer": {
      "post": {
        "tags": [
          "Device Control & Configuration"
        ],
        "summary": "Program Charging Timer",
        "description": "Configures a start/end time timer (timerId) on the device for scheduled charging.",
        "operationId": "programTimerCommand",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_DEVICE_ID"
          },
          {
            "name": "timer id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TimerDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Command executed successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Exception"
          }
        },
        "x-codeSamples": [
          {
            "lang": "curl",
            "label": "cURL",
            "source": "curl -X 'POST' \\\n  'https://v2c.cloud/kong/v2c_service/device/timer?deviceId=YOUR_DEVICE_ID&timer%20id=1' \\\n  -H 'apikey: {APIKEY}' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n    \"start_time\": \"22:00\",\n    \"end_time\": \"06:00\",\n    \"active\": true\n  }'\n"
          }
        ]
      }
    },
    "/device/thirdparty_mode": {
      "post": {
        "tags": [
          "Device Control & Configuration"
        ],
        "summary": "Enable/Disable Third-Party API Control Mode",
        "description": "Enables or disables the device's control mode via the third-party API.",
        "operationId": "executeThirdPartyModeCommand",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_DEVICE_ID"
          },
          {
            "name": "mode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1"
          },
          {
            "name": "value",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Command executed successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Exception"
          }
        },
        "x-codeSamples": [
          {
            "lang": "curl",
            "label": "cURL",
            "source": "curl -X 'POST' \\\n  'https://v2c.cloud/kong/v2c_service/device/thirdparty_mode?deviceId=YOUR_DEVICE_ID&mode=1&value=1' \\\n  -H 'apikey: {APIKEY}'\n"
          }
        ]
      }
    },
    "/device/inst_type": {
      "post": {
        "tags": [
          "Device Control & Configuration"
        ],
        "summary": "Set Installation Type",
        "description": "Updates the electrical installation type. 0: Monophase, 1: Three-phase, 2: Photovoltaic.",
        "operationId": "executeChangeInstalationTypeCommand",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_DEVICE_ID"
          },
          {
            "name": "value",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "0",
                "1",
                "2"
              ]
            },
            "example": "0"
          }
        ],
        "responses": {
          "200": {
            "description": "Command executed successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Exception"
          }
        },
        "x-codeSamples": [
          {
            "lang": "curl",
            "label": "cURL",
            "source": "curl -X 'POST' \\\n  'https://v2c.cloud/kong/v2c_service/device/inst_type?deviceId=YOUR_DEVICE_ID&value=0' \\\n  -H 'apikey: {APIKEY}'\n"
          }
        ]
      }
    },
    "/device/ocpp": {
      "post": {
        "tags": [
          "Device Control & Configuration"
        ],
        "summary": "Enable/Disable OCPP Functionality",
        "description": "Activates or deactivates the Open Charge Point Protocol (OCPP) functionality. 0: OCPP Off, 1: OCPP On.",
        "operationId": "executeChangeOcppCommand",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "The device's ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_DEVICE_ID"
          },
          {
            "name": "value",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "0",
                "1"
              ]
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Command executed successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Exception"
          }
        },
        "x-codeSamples": [
          {
            "lang": "curl",
            "label": "cURL",
            "source": "curl -X 'POST' \\\n  'https://v2c.cloud/kong/v2c_service/device/ocpp?id=YOUR_DEVICE_ID&value=1' \\\n  -H 'apikey: {APIKEY}'\n"
          }
        ]
      }
    },
    "/device/ocpp_id": {
      "post": {
        "tags": [
          "Device Control & Configuration"
        ],
        "summary": "Configure OCPP Charge Point ID",
        "description": "Configures the unique Charge Point Identifier for OCPP communication.",
        "operationId": "executeChangeOcppIdCommand",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "The device's ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_DEVICE_ID"
          },
          {
            "name": "value",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "V2C_Charger_001"
          }
        ],
        "responses": {
          "200": {
            "description": "Command executed successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Exception"
          }
        },
        "x-codeSamples": [
          {
            "lang": "curl",
            "label": "cURL",
            "source": "curl -X 'POST' \\\n  'https://v2c.cloud/kong/v2c_service/device/ocpp_id?id=YOUR_DEVICE_ID&value=V2C_Charger_001' \\\n  -H 'apikey: {APIKEY}'\n"
          }
        ]
      }
    },
    "/device/ocpp_addr": {
      "post": {
        "tags": [
          "Device Control & Configuration"
        ],
        "summary": "Configure OCPP Server Address (URL)",
        "description": "Configures the endpoint URL for the central OCPP server.",
        "operationId": "executeChangeOcppAddrCommand",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "The device's ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_DEVICE_ID"
          },
          {
            "name": "value",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ws://ocpp.server.com/endpoint"
          }
        ],
        "responses": {
          "200": {
            "description": "Command executed successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Exception"
          }
        },
        "x-codeSamples": [
          {
            "lang": "curl",
            "label": "cURL",
            "source": "curl -X 'POST' \\\n  'https://v2c.cloud/kong/v2c_service/device/ocpp_addr?id=YOUR_DEVICE_ID&value=ws%3A%2F%2Focpp.server.com%2Fendpoint' \\\n  -H 'apikey: {APIKEY}'\n"
          }
        ]
      }
    },
    "/device/denka/max_power": {
      "post": {
        "tags": [
          "Device Control & Configuration"
        ],
        "summary": "Set Denka Maximum Power",
        "description": "Updates the maximum power setting for Denka devices.",
        "operationId": "executeChangeMaxPowerCommand",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_DEVICE_ID"
          },
          {
            "name": "value",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "5000"
          }
        ],
        "responses": {
          "200": {
            "description": "Command executed successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Exception"
          }
        },
        "x-codeSamples": [
          {
            "lang": "curl",
            "label": "cURL",
            "source": "curl -X 'POST' \\\n  'https://v2c.cloud/kong/v2c_service/device/denka/max_power?deviceId=YOUR_DEVICE_ID&value=5000' \\\n  -H 'apikey: {APIKEY}'\n"
          }
        ]
      }
    },
    "/device/inverter_ip": {
      "post": {
        "tags": [
          "Device Control & Configuration"
        ],
        "summary": "Configure Inverter IP Address",
        "description": "Configures the IP address of the connected solar inverter (e.g., Huawei).",
        "operationId": "executeChangeHuaweiIPCommand",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "The device's ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_DEVICE_ID"
          },
          {
            "name": "value",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "192.168.1.100"
          }
        ],
        "responses": {
          "200": {
            "description": "Command executed successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Exception"
          }
        },
        "x-codeSamples": [
          {
            "lang": "curl",
            "label": "cURL",
            "source": "curl -X 'POST' \\\n  'https://v2c.cloud/kong/v2c_service/device/inverter_ip?id=YOUR_DEVICE_ID&value=192.168.1.100' \\\n  -H 'apikey: {APIKEY}'\n"
          }
        ]
      }
    },
    "/device/wifi": {
      "post": {
        "tags": [
          "Device Control & Configuration"
        ],
        "summary": "Configure Device WiFi Connection",
        "description": "Updates the device's WiFi network credentials (SSID and Password).",
        "operationId": "executeChangeWifiCommand",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_DEVICE_ID"
          },
          {
            "name": "ssid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "MyWifiNetwork"
          },
          {
            "name": "password",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "MyWifiPassword123"
          }
        ],
        "responses": {
          "200": {
            "description": "Command executed successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Exception"
          }
        },
        "x-codeSamples": [
          {
            "lang": "curl",
            "label": "cURL",
            "source": "curl -X 'POST' \\\n  'https://v2c.cloud/kong/v2c_service/device/wifi?deviceId=YOUR_DEVICE_ID&ssid=MyWifiNetwork&password=MyWifiPassword123' \\\n  -H 'apikey: {APIKEY}'\n"
          }
        ]
      }
    },
    "/device/slave_type": {
      "post": {
        "tags": [
          "Device Control & Configuration"
        ],
        "summary": "Set Connected Meter (Slave) Type",
        "description": "Updates the connected energy meter (slave) type for load balancing. 0: Shelly, 1: V2C v2, 3: Huawei, 4: Solax, etc.",
        "operationId": "executeChangeSlaveTipeCommand",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_DEVICE_ID"
          },
          {
            "name": "value",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "3"
          }
        ],
        "responses": {
          "200": {
            "description": "Command executed successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Exception"
          }
        },
        "x-codeSamples": [
          {
            "lang": "curl",
            "label": "cURL",
            "source": "curl -X 'POST' \\\n  'https://v2c.cloud/kong/v2c_service/device/slave_type?deviceId=YOUR_DEVICE_ID&value=3' \\\n  -H 'apikey: {APIKEY}'\n"
          }
        ]
      }
    },
    "/device/language": {
      "post": {
        "tags": [
          "Device Control & Configuration"
        ],
        "summary": "Set Device Language",
        "description": "Changes the device's display language. Values include 0: English, 1: Spanish, 2: Portuguese, etc.",
        "operationId": "executeChangeLanguageCommand",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_DEVICE_ID"
          },
          {
            "name": "value",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "0",
                "1",
                "2",
                "3",
                "4",
                "5",
                "6"
              ]
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Command executed successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Exception"
          }
        },
        "x-codeSamples": [
          {
            "lang": "curl",
            "label": "cURL",
            "source": "curl -X 'POST' \\\n  'https://v2c.cloud/kong/v2c_service/device/language?deviceId=YOUR_DEVICE_ID&value=1' \\\n  -H 'apikey: {APIKEY}'\n"
          }
        ]
      }
    },
    "/device/logo_led": {
      "post": {
        "tags": [
          "Device Control & Configuration"
        ],
        "summary": "Control Device Logo LED Status",
        "description": "Turns the device's logo LED light on or off.",
        "operationId": "executeLogoLedCommand",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_DEVICE_ID"
          },
          {
            "name": "value",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "0",
                "1"
              ]
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Command executed successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Exception"
          }
        },
        "x-codeSamples": [
          {
            "lang": "curl",
            "label": "cURL",
            "source": "curl -X 'POST' \\\n  'https://v2c.cloud/kong/v2c_service/device/logo_led?deviceId=YOUR_DEVICE_ID&value=1' \\\n  -H 'apikey: {APIKEY}'\n"
          }
        ]
      }
    },
    "/device/reboot": {
      "post": {
        "tags": [
          "Device Control & Configuration"
        ],
        "summary": "Reboot Device",
        "description": "Executes a remote reboot command on the device.",
        "operationId": "executeRebootCommand",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_DEVICE_ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Command executed successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Exception"
          }
        },
        "x-codeSamples": [
          {
            "lang": "curl",
            "label": "cURL",
            "source": "curl -X 'POST' \\\n  'https://v2c.cloud/kong/v2c_service/device/reboot?deviceId=YOUR_DEVICE_ID' \\\n  -H 'apikey: {APIKEY}'\n"
          }
        ]
      }
    },
    "/device/currentstatecharge": {
      "post": {
        "tags": [
          "Device Status & Data Retrieval"
        ],
        "summary": "Retrieve Current State Charge Data",
        "description": "Retrieves the device's comprehensive operational data, including charging status, power metrics, and error codes.",
        "operationId": "executeCurrentStateChargeCommand",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_DEVICE_ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Command executed successfully. Returns device's real-time charging status.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentStateChargeResponse"
                },
                "examples": {
                  "trydan_device_data": {
                    "summary": "Trydan Device Data",
                    "value": {
                      "error": "244",
                      "battery": "0.000000",
                      "voltage": "230.50",
                      "intensity": "6",
                      "seconds": "93",
                      "photovoltaic_on": "1",
                      "house_power": "3.500000",
                      "charge_state": "2",
                      "power": "1.380000",
                      "sun_power": "1.500000",
                      "phases": "1",
                      "cp_level": "248.000000",
                      "energy": "0.000000"
                    }
                  },
                  "pole_device_data": {
                    "summary": "Pole/Simplified Device Data",
                    "value": {
                      "seconds": 0,
                      "photovoltaic_on": 0,
                      "charge_state": "0",
                      "power": 0,
                      "error": "",
                      "energy": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Exception"
          }
        },
        "x-codeSamples": [
          {
            "lang": "curl",
            "label": "cURL",
            "source": "curl -X 'POST' \\\n  'https://v2c.cloud/kong/v2c_service/thirdparty/device/currentstatecharge?deviceId=YOUR_DEVICE_ID' \\\n  -H 'apikey: {APIKEY}'\n"
          }
        ]
      }
    },
    "/device/reported": {
      "get": {
        "tags": [
          "Device Status & Data Retrieval"
        ],
        "summary": "Retrieve Device Last Reported Status (Shadow)",
        "description": "Gets the last known status and data reported by the device (the \"shadow\" state). This is the most comprehensive data endpoint.",
        "operationId": "getReported",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_DEVICE_ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Command executed successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Exception"
          }
        },
        "x-codeSamples": [
          {
            "lang": "curl",
            "label": "cURL",
            "source": "curl -X 'GET' \\\n  'https://v2c.cloud/kong/v2c_service/device/reported?deviceId=YOUR_DEVICE_ID' \\\n  -H 'apikey: {APIKEY}'\n"
          }
        ]
      }
    },
    "/device/connected": {
      "get": {
        "tags": [
          "Device Status & Data Retrieval"
        ],
        "summary": "Check Device Connectivity Status",
        "description": "Checks if the device is currently connected to the V2C Cloud service.",
        "operationId": "isConnected",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_DEVICE_ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Command executed successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Exception"
          }
        },
        "x-codeSamples": [
          {
            "lang": "curl",
            "label": "cURL",
            "source": "curl -X 'GET' \\\n  'https://v2c.cloud/kong/v2c_service/device/connected?deviceId=YOUR_DEVICE_ID' \\\n  -H 'apikey: {APIKEY}'\n"
          }
        ]
      }
    },
    "/device/wifilist": {
      "get": {
        "tags": [
          "Device Status & Data Retrieval"
        ],
        "summary": "Scan for Visible WiFi Networks",
        "description": "Sends a command to the device to scan and return a list of all visible WiFi networks in its vicinity.",
        "operationId": "getWifiListCommand",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "The device's ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_DEVICE_ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Command executed successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Exception"
          }
        },
        "x-codeSamples": [
          {
            "lang": "curl",
            "label": "cURL",
            "source": "curl -X 'GET' \\\n  'https://v2c.cloud/kong/v2c_service/device/wifilist?id=YOUR_DEVICE_ID' \\\n  -H 'apikey: {APIKEY}'\n"
          }
        ]
      }
    },
    "/device/rfid": {
      "post": {
        "tags": [
          "RFID Management"
        ],
        "summary": "Activate RFID Card Learning Mode",
        "description": "Puts the device into a learning state to read and register a new physical RFID card.",
        "operationId": "executeSetTagRFIDCommand",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_DEVICE_ID"
          },
          {
            "name": "tag",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "NewCardName"
          }
        ],
        "responses": {
          "200": {
            "description": "Command executed successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Exception"
          }
        },
        "x-codeSamples": [
          {
            "lang": "curl",
            "label": "cURL",
            "source": "curl -X 'POST' \\\n  'https://v2c.cloud/kong/v2c_service/device/rfid?deviceId=YOUR_DEVICE_ID&tag=NewCardName' \\\n  -H 'apikey: {APIKEY}'\n"
          }
        ]
      },
      "delete": {
        "tags": [
          "RFID Management"
        ],
        "summary": "Delete Registered RFID Card by Code",
        "description": "Deletes an RFID card from the device's whitelist using its unique code (UID).",
        "operationId": "executeDeleteTagRFIDCommand",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_DEVICE_ID"
          },
          {
            "name": "code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "RFID_UID_TO_DELETE"
          }
        ],
        "responses": {
          "200": {
            "description": "Command executed successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Exception"
          }
        },
        "x-codeSamples": [
          {
            "lang": "curl",
            "label": "cURL",
            "source": "curl -X 'DELETE' \\\n  'https://v2c.cloud/kong/v2c_service/device/rfid?deviceId=YOUR_DEVICE_ID&code=RFID_UID_TO_DELETE' \\\n  -H 'apikey: {APIKEY}'\n"
          }
        ]
      },
      "get": {
        "tags": [
          "RFID Management"
        ],
        "summary": "Retrieve Registered RFID Cards",
        "description": "Gets the list of all RFID cards currently registered on the device.",
        "operationId": "getRFIDCommand",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_DEVICE_ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Command executed successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Exception"
          }
        },
        "x-codeSamples": [
          {
            "lang": "curl",
            "label": "cURL",
            "source": "curl -X 'GET' \\\n  'https://v2c.cloud/kong/v2c_service/device/rfid?deviceId=YOUR_DEVICE_ID' \\\n  -H 'apikey: {APIKEY}'\n"
          }
        ]
      }
    },
    "/device/rfid/tag": {
      "post": {
        "tags": [
          "RFID Management"
        ],
        "summary": "Manually Register RFID Card",
        "description": "Manually adds an RFID card to the device's whitelist by specifying its code (UID) and a name (tag).",
        "operationId": "executeSetFullRFIDCommand",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_DEVICE_ID"
          },
          {
            "name": "code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "NEW_RFID_UID"
          },
          {
            "name": "tag",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ManualCardName"
          }
        ],
        "responses": {
          "200": {
            "description": "Command executed successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Exception"
          }
        },
        "x-codeSamples": [
          {
            "lang": "curl",
            "label": "cURL",
            "source": "curl -X 'POST' \\\n  'https://v2c.cloud/kong/v2c_service/device/rfid/tag?deviceId=YOUR_DEVICE_ID&code=NEW_RFID_UID&tag=ManualCardName' \\\n  -H 'apikey: {APIKEY}'\n"
          }
        ]
      },
      "put": {
        "tags": [
          "RFID Management"
        ],
        "summary": "Update RFID Card Name (Tag)",
        "description": "Updates the friendly name (tag) associated with an existing registered RFID card code.",
        "operationId": "executeUpdateTagRFIDCommand",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_DEVICE_ID"
          },
          {
            "name": "code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "RFID_UID_TO_UPDATE"
          },
          {
            "name": "tag",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "UpdatedCardName"
          }
        ],
        "responses": {
          "200": {
            "description": "Command executed successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Exception"
          }
        },
        "x-codeSamples": [
          {
            "lang": "curl",
            "label": "cURL",
            "source": "curl -X 'PUT' \\\n  'https://v2c.cloud/kong/v2c_service/device/rfid/tag?deviceId=YOUR_DEVICE_ID&code=RFID_UID_TO_UPDATE&tag=UpdatedCardName' \\\n  -H 'apikey: {APIKEY}'\n"
          }
        ]
      }
    },
    "/device/set_rfid": {
      "post": {
        "tags": [
          "RFID Management"
        ],
        "summary": "Enable/Disable RFID Reader",
        "description": "Activates or deactivates the physical RFID reader functionality on the device. 0: Reader Off, 1: Reader On.",
        "operationId": "executeSetPropertyRFIDCommand",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_DEVICE_ID"
          },
          {
            "name": "value",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "0",
                "1"
              ]
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Command executed successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Exception"
          }
        },
        "x-codeSamples": [
          {
            "lang": "curl",
            "label": "cURL",
            "source": "curl -X 'POST' \\\n  'https://v2c.cloud/kong/v2c_service/device/set_rfid?deviceId=YOUR_DEVICE_ID&value=1' \\\n  -H 'apikey: {APIKEY}'\n"
          }
        ]
      }
    },
    "/stadistic/device": {
      "get": {
        "tags": [
          "Charging Statistics"
        ],
        "summary": "Retrieve Charging Statistics by Device",
        "description": "Gets the last 5 charging statistics for a specific device, with optional filtering by date range.",
        "operationId": "getStadisticsByDevice",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_DEVICE_ID"
          },
          {
            "name": "chargeDateStart",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "2023-01-01"
          },
          {
            "name": "chargeDateEnd",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "2023-01-31"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Statistic"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Exception"
          }
        },
        "x-codeSamples": [
          {
            "lang": "curl",
            "label": "cURL (No Dates)",
            "source": "curl -X 'GET' \\\n  'https://v2c.cloud/kong/v2c_service/stadistic/device?deviceId=YOUR_DEVICE_ID' \\\n  -H 'apikey: {APIKEY}'\n"
          },
          {
            "lang": "curl",
            "label": "cURL (With Dates)",
            "source": "curl -X 'GET' \\\n  'https://v2c.cloud/kong/v2c_service/stadistic/device?deviceId=YOUR_DEVICE_ID&chargeDateStart=2023-01-01&chargeDateEnd=2023-01-31' \\\n  -H 'apikey: {APIKEY}'\n"
          }
        ]
      }
    },
    "/stadistic/global/me": {
      "get": {
        "tags": [
          "Charging Statistics"
        ],
        "summary": "Retrieve Global Charging Statistics",
        "description": "Gets aggregated (global) charging statistics for all devices associated with the authenticated user, optionally filtered by date range.",
        "operationId": "getGlobalStadisticMe",
        "parameters": [
          {
            "name": "endChargeDateStart",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "2023-01-01"
          },
          {
            "name": "endChargeDateEnd",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "2023-01-31"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GlobalStadisticInfo"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Exception"
          }
        },
        "x-codeSamples": [
          {
            "lang": "curl",
            "label": "cURL",
            "source": "curl -X 'GET' \\\n  'https://v2c.cloud/kong/v2c_service/stadistic/global/me?endChargeDateStart=2023-01-01&endChargeDateEnd=2023-01-31' \\\n  -H 'apikey: {APIKEY}'\n"
          }
        ]
      }
    },
    "/device/savepersonalicepower/v2": {
      "post": {
        "tags": [
          "Advanced Power Profiles"
        ],
        "summary": "Save New Advanced Power Profile (v2)",
        "description": "Creates and saves a new personalized power configuration profile.",
        "operationId": "savePersonalicePower",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "description": "The device's ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_DEVICE_ID"
          },
          {
            "name": "name",
            "in": "query",
            "description": "The profile name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "SolarMode"
          },
          {
            "name": "updateAt",
            "in": "query",
            "description": "The time when sent (for versioning/timestamping)",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2023-10-27T10:00:00Z"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonalPower"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Exception"
          }
        },
        "x-codeSamples": [
          {
            "lang": "curl",
            "label": "cURL",
            "source": "curl -X 'POST' \\\n  'https://v2c.cloud/kong/v2c_service/device/savepersonalicepower/v2?deviceId=YOUR_DEVICE_ID&name=SolarMode&updateAt=2023-10-27T10:00:00Z' \\\n  -H 'apikey: {APIKEY}' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n    \"mode\": \"solar\",\n    \"value\": 32\n  }'\n"
          }
        ]
      }
    },
    "/device/personalicepower/v2": {
      "post": {
        "tags": [
          "Advanced Power Profiles"
        ],
        "summary": "Update Existing Advanced Power Profile (v2)",
        "description": "Updates an existing personalized power configuration profile.",
        "operationId": "updatePersonalicePowerV2",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "The device's ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_DEVICE_ID"
          },
          {
            "name": "name",
            "in": "query",
            "description": "The profile name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "SolarMode"
          },
          {
            "name": "updateAt",
            "in": "query",
            "description": "The time when sent (for versioning/timestamping)",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2023-10-27T10:01:00Z"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonalPower"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Exception"
          }
        },
        "x-codeSamples": [
          {
            "lang": "curl",
            "label": "cURL",
            "source": "curl -X 'POST' \\\n  'https://v2c.cloud/kong/v2c_service/device/personalicepower/v2?id=YOUR_DEVICE_ID&name=SolarMode&updateAt=2023-10-27T10:01:00Z' \\\n  -H 'apikey: {APIKEY}' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n    \"mode\": \"solar_updated\",\n    \"value\": 30\n  }'\n"
          }
        ]
      },
      "get": {
        "tags": [
          "Advanced Power Profiles"
        ],
        "summary": "Retrieve Specific Advanced Power Profile (v2)",
        "description": "Retrieves a single personalized power configuration profile using its timestamp.",
        "operationId": "getPersonalicePowerv2",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "description": "The device's ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_DEVICE_ID"
          },
          {
            "name": "updateAt",
            "in": "query",
            "description": "The profile timestamp",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2023-10-27T10:00:00Z"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Exception"
          }
        },
        "x-codeSamples": [
          {
            "lang": "curl",
            "label": "cURL",
            "source": "curl -X 'GET' \\\n  'https://v2c.cloud/kong/v2c_service/device/personalicepower/v2?deviceId=YOUR_DEVICE_ID&updateAt=2023-10-27T10:00:00Z' \\\n  -H 'apikey: {APIKEY}'\n"
          }
        ]
      },
      "delete": {
        "tags": [
          "Advanced Power Profiles"
        ],
        "summary": "Delete Advanced Power Profile (v2)",
        "description": "Deletes a personalized power configuration profile by its name and timestamp.",
        "operationId": "deletePersonalicePower",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "description": "The device's ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_DEVICE_ID"
          },
          {
            "name": "name",
            "in": "query",
            "description": "The personalice power name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "SolarMode"
          },
          {
            "name": "updateAt",
            "in": "query",
            "description": "The profile timestamp",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2023-10-27T10:00:00Z"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Exception"
          }
        },
        "x-codeSamples": [
          {
            "lang": "curl",
            "label": "cURL",
            "source": "curl -X 'DELETE' \\\n  'https://v2c.cloud/kong/v2c_service/device/personalicepower/v2?deviceId=YOUR_DEVICE_ID&name=SolarMode&updateAt=2023-10-27T10:00:00Z' \\\n  -H 'apikey: {APIKEY}'\n"
          }
        ]
      }
    },
    "/device/personalicepower/all": {
      "get": {
        "tags": [
          "Advanced Power Profiles"
        ],
        "summary": "Retrieve All Advanced Power Profiles",
        "description": "Gets a list of all personalized power configuration profiles associated with the device.",
        "operationId": "getAllPersonalicePower",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "description": "The device's ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_DEVICE_ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Exception"
          }
        },
        "x-codeSamples": [
          {
            "lang": "curl",
            "label": "cURL",
            "source": "curl -X 'GET' \\\n  'https://v2c.cloud/kong/v2c_service/device/personalicepower/all?deviceId=YOUR_DEVICE_ID' \\\n  -H 'apikey: {APIKEY}'\n"
          }
        ]
      }
    },
    "/device/update": {
      "post": {
        "tags": [
          "Firmware Management"
        ],
        "summary": "Initiate Firmware Update",
        "description": "Sends a command to the device to search for and install the latest available firmware update.",
        "operationId": "updateVersion",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_DEVICE_ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Command executed successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Exception"
          }
        },
        "x-codeSamples": [
          {
            "lang": "curl",
            "label": "cURL",
            "source": "curl -X 'POST' \\\n  'https://v2c.cloud/kong/v2c_service/device/update?deviceId=YOUR_DEVICE_ID' \\\n  -H 'apikey: {APIKEY}'\n"
          }
        ]
      }
    },
    "/version": {
      "get": {
        "tags": [
          "Firmware Management"
        ],
        "summary": "Retrieve Device Firmware Version",
        "description": "Gets the current firmware version string of the specified device.",
        "operationId": "getMyVersion",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_DEVICE_ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Command executed successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Device version not found"
          },
          "500": {
            "description": "Server Exception"
          }
        },
        "x-codeSamples": [
          {
            "lang": "curl",
            "label": "cURL",
            "source": "curl -X 'GET' \\\n  'https://v2c.cloud/kong/v2c_service/version?deviceId=YOUR_DEVICE_ID' \\\n  -H 'apikey: {APIKEY}'\n"
          }
        ]
      }
    },
    "/pairings/me": {
      "get": {
        "tags": [
          "Pairing Management"
        ],
        "summary": "Retrieve All User Pairings",
        "description": "Gets the list of all device pairings associated with the authenticated user.",
        "operationId": "getPairingsMe",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PairingDTO"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Exception"
          }
        },
        "x-codeSamples": [
          {
            "lang": "curl",
            "label": "cURL",
            "source": "curl -X 'GET' \\\n  'https://v2c.cloud/kong/v2c_service/pairings/me' \\\n  -H 'apikey: {APIKEY}'\n"
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "apikey",
        "description": "Personal API Key required for authentication, obtained from the V2C user portal."
      }
    },
    "schemas": {
      "CurrentStateChargeResponse": {
        "type": "object",
        "description": "Real-time operational data and status of the device during a charging session.",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error code or message if dynamic control reports a fault. An empty string indicates no current error.",
            "example": "244"
          },
          "battery": {
            "type": "string",
            "description": "Battery value reported by the dynamic control system.",
            "example": "0.000000"
          },
          "voltage": {
            "type": "string",
            "description": "Charger's current voltage value (V).",
            "example": "230.50"
          },
          "intensity": {
            "type": "string",
            "description": "Current charging current (A).",
            "example": "6"
          },
          "seconds": {
            "type": "string",
            "description": "Duration of the current charging session in seconds.",
            "example": "93"
          },
          "photovoltaic_on": {
            "type": "string",
            "description": "Status of the Photovoltaic (PV) charging mode. 0-> Off, 1->On.",
            "example": "1"
          },
          "house_power": {
            "type": "string",
            "description": "Total current household power consumption (kW).",
            "example": "3.500000"
          },
          "charge_state": {
            "type": "string",
            "description": "Current state of the charging process.",
            "enum": [
              "0",
              "1",
              "2",
              "3",
              "4",
              "5"
            ],
            "x-enum-descriptions": {
              "0": "Disconnected",
              "1": "Vehicle Connected, Not Charging",
              "2": "Charging",
              "3": "Ventilation Required",
              "4": "Control Pilot Short Circuit",
              "5": "General Fault"
            },
            "example": "2"
          },
          "power": {
            "type": "string",
            "description": "Power currently delivered to the vehicle (kW).",
            "example": "1.380000"
          },
          "sun_power": {
            "type": "string",
            "description": "Power reported from the solar panels (kW).",
            "example": "1.500000"
          },
          "phases": {
            "type": "string",
            "description": "Number of phases currently used for charging (1 or 3).",
            "example": "1"
          },
          "cp_level": {
            "type": "string",
            "description": "Control Pilot (CP) signal level (V).",
            "example": "248.000000"
          },
          "energy": {
            "type": "string",
            "description": "Total energy delivered in the current charging session (kWh).",
            "example": "0.000000"
          }
        }
      },
      "TimerDTO": {
        "type": "object",
        "description": "Data structure for programming a charging timer on the device.",
        "properties": {
          "start_time": {
            "type": "string",
            "format": "time",
            "example": "22:00"
          },
          "end_time": {
            "type": "string",
            "format": "time",
            "example": "06:00"
          },
          "active": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "PersonalPower": {
        "type": "object",
        "description": "Model for an Advanced Power Profile configuration.",
        "properties": {
          "mode": {
            "type": "string",
            "example": "solar"
          },
          "value": {
            "type": "integer",
            "example": 32
          }
        }
      },
      "PairingDTO": {
        "type": "object",
        "description": "Device pairing information.",
        "properties": {
          "id": {
            "type": "string",
            "example": "pairing_id_123"
          },
          "name": {
            "type": "string",
            "example": "My Pairing"
          }
        }
      },
      "Statistic": {
        "type": "object",
        "description": "Detailed statistics for a single charging session. Returns the last 5 sessions if no date range is specified.",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the charging record.",
            "example": 17307150
          },
          "deviceId": {
            "type": "string",
            "description": "Unique identifier of the device (charger).",
            "example": "QRPW7LV"
          },
          "startChargeDate": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the charging session began.",
            "example": "2025-10-28T11:44:47"
          },
          "endChargeDate": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the charging session ended.",
            "example": "2025-10-28T14:45:05"
          },
          "idCharge": {
            "type": "string",
            "description": "Secondary identifier for the charge session (often a formatted timestamp).",
            "example": "2025-10-28 11:44:47"
          },
          "energy": {
            "type": "number",
            "format": "float",
            "description": "Total energy consumed during the session (kWh).",
            "example": 9.6
          },
          "cost": {
            "type": "number",
            "format": "float",
            "description": "Total monetary cost of the charge session.",
            "example": 1.44
          },
          "coCost": {
            "type": "number",
            "format": "float",
            "description": "Cost associated with CO2 (carbon offset cost).",
            "example": 2.976
          },
          "costFv": {
            "type": "number",
            "format": "float",
            "description": "Monetary cost covered by Photovoltaic (FV) energy.",
            "example": 0
          },
          "energyByHour": {
            "type": "string",
            "description": "Energy consumed per hour, usually represented as a pipe-separated string (e.g., '0.9|3.5|3.6|1.6').",
            "example": "0.9|3.5|3.6|1.6"
          },
          "energyByHourFv": {
            "type": "string",
            "nullable": true,
            "description": "Energy provided by Photovoltaic (FV) per hour. Null if no FV data is available.",
            "example": null
          },
          "rfidCode": {
            "type": "string",
            "description": "Unique code (UID) of the RFID card used to start the charge.",
            "example": "aa23b601"
          },
          "rfidName": {
            "type": "string",
            "description": "Friendly name associated with the RFID card used.",
            "example": "Vicente"
          },
          "message": {
            "type": "string",
            "nullable": true,
            "description": "Optional status or informational message.",
            "example": null
          },
          "warning": {
            "type": "boolean",
            "description": "Indicates if a warning was registered during the session.",
            "example": false
          },
          "finished": {
            "type": "boolean",
            "description": "Indicates if the session finished correctly.",
            "example": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Record creation timestamp on the cloud server.",
            "example": "2025-10-28T10:44:52.000+00:00"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Record last update timestamp on the cloud server.",
            "example": "2025-10-28T13:45:07.000+00:00"
          }
        }
      },
      "GlobalStadisticInfo": {
        "type": "object",
        "description": "Aggregated charging statistics across multiple devices or a period.",
        "properties": {
          "totalEnergy": {
            "type": "number",
            "example": 1500.75
          },
          "totalCharges": {
            "type": "integer",
            "example": 120
          }
        }
      },
      "ApiResponseSuccess": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Command executed successfully"
          }
        }
      }
    }
  }
}